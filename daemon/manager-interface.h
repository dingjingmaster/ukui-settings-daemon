/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./ukui-settings-daemon.xml -p ManagerInterface
 *
 * qdbusxml2cpp is Copyright (C) 2019 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MANAGERINTERFACE_H
#define MANAGERINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.ukui.SettingsDaemon
 */
class PluginManagerDBus: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ukui.SettingsDaemon"; }

public:
    PluginManagerDBus(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~PluginManagerDBus();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<bool> managerAwake()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("managerAwake"), argumentList);
    }

    inline QDBusPendingReply<bool> managerStart()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("managerStart"), argumentList);
    }

    inline QDBusPendingReply<> managerStop()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("managerStop"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void pluginActivity(const QString &in0);
    void pluginDeactivity(const QString &in0);
};
#endif
